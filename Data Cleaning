-- Combine tables from each month into a single table --
CREATE TABLE cyclistic.2022_2023 AS
SELECT * FROM cyclistic.2022_07
UNION ALL
SELECT * FROM cyclistic.2022_08
UNION ALL
SELECT * FROM cyclistic.2022_09
UNION ALL
SELECT * FROM cyclistic.2022_10
UNION ALL
SELECT * FROM cyclistic.2022_11
UNION ALL
SELECT * FROM cyclistic.2022_12
UNION ALL
SELECT * FROM cyclistic.2023_01
UNION ALL
SELECT * FROM cyclistic.2023_02
UNION ALL
SELECT * FROM cyclistic.2023_03
UNION ALL
SELECT * FROM cyclistic.2023_04
UNION ALL
SELECT * FROM cyclistic.2023_05
UNION ALL
SELECT * FROM cyclistic.2023_06;

-- Checking to see if there are any null values in any columns in the newly created table --
SELECT
COUNT (ride_id) AS total_trips,
COUNT (CASE WHEN ride_id IS NULL THEN 1 END) AS null_ride_id,
COUNT (CASE WHEN rideable_type IS NULL THEN 1 END) AS null_rideable_type,
COUNT (CASE WHEN started_at IS NULL THEN 1 END) AS null_started_at,
COUNT (CASE WHEN ended_at IS NULL THEN 1 END) AS null_ended_at,
COUNT (CASE WHEN start_station_name IS NULL THEN 1 END) AS null_start_station_name,
COUNT (CASE WHEN start_station_id IS NULL THEN 1 END) AS null_start_station_id,
COUNT (CASE WHEN end_station_name IS NULL THEN 1 END) AS null_end_station_name,
COUNT (CASE WHEN end_station_id IS NULL THEN 1 END) AS null_end_station_id,
COUNT (CASE WHEN start_lat IS NULL THEN 1 END) AS null_start_lat,
COUNT (CASE WHEN start_lng IS NULL THEN 1 END) AS null_start_lng,
COUNT (CASE WHEN end_lat IS NULL THEN 1 END) AS null_end_lat,
COUNT (CASE WHEN end_lng IS NULL THEN 1 END) AS null_end_lng,
COUNT (CASE WHEN member_casual IS NULL THEN 1 END) AS null_member_casual
FROM `cyclistic.2022_2023`;

-- Converting timestamps to Chicago/Central US time, adding "hour" column, adding "day of week" column, adding "Weekday/Weekend" column, adding "month" column, and adding "trip duration" column. --
CREATE TABLE cyclistic.2022_2023_clean AS
SELECT
  *, 
  EXTRACT(HOUR FROM cst_started_at) AS hour,
  EXTRACT(DAYOFWEEK FROM cst_started_at) AS dow,
  CASE WHEN dow = 1 THEN 'Sunday'
  WHEN dow = 2 THEN 'Monday'
  WHEN dow = 3 THEN 'Tuesday'
  WHEN dow = 4 THEN 'Wednesday'
  WHEN dow = 5 THEN 'Thursday'
  WHEN dow = 6 THEN 'Friday'
  WHEN dow = 7 THEN 'Saturday' END AS day_of_week,
  CASE WHEN dow = 1 THEN "Weekend"
  WHEN dow = 7 THEN "Weekend"
  WHEN dow = 2 THEN "Weekday"
  WHEN dow = 3 THEN "Weekday"
  WHEN dow = 4 THEN "Weekday"
  WHEN dow = 5 THEN "Weekday"
  WHEN dow = 6 THEN "Weekday" END AS weekday_weekend,
  EXTRACT(MONTH FROM cst_started_at) AS month,
  TIMESTAMP_DIFF(ended_at, started_at, MINUTE) AS trip_duration

FROM
  (
  SELECT  
    *, 
      DATETIME(started_at, "America/Chicago") AS cst_started_at
  
  FROM `cyclistic.2022_2023`
  );






















  
